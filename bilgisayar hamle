import java.util.Random;

public class Bilgisayar extends Play {
    static Oyuncu oyuncu = new Oyuncu("KULLANICI");
    static int sayac = 0;
    int baslangic,bitis,ilkVurulanSatir,ilkVurulanSutun,sbt;
    boolean gemiYatay;
    int vurus=0;
    static boolean kazandiMi = false;
    static String[][] hamleTahta = new String[tahtaBuyuklugu][tahtaBuyuklugu];
    static String[][] bilgisayarTahta = new String[tahtaBuyuklugu][tahtaBuyuklugu];

    public Bilgisayar() {
    }
    public boolean atisKontrolBilgisayar(String[][] karsitahta) {
        Random random = new Random();
        int satir,sutun;

        int turn = 1;
        while (turn == 1) {
            try {
                //vurus>1
                if (vurus == 0) {
                    satir = random.nextInt(Play.tahtaBuyuklugu);
                    sutun = random.nextInt(Play.tahtaBuyuklugu);
                    if (hamleTahta[satir][sutun].equals("X ") || hamleTahta[satir][sutun].equals(". ")) {
                        throw new IllegalArgumentException(" ");
                    }
                    if (!karsitahta[satir][sutun].equals("0 ") && !karsitahta[satir][sutun].equals(". ")) {
                        sayac++;
                        ilkVurulanSatir = satir;
                        baslangic = ilkVurulanSatir;
                        bitis = ilkVurulanSatir;
                        sbt = sutun;
                        ilkVurulanSutun = sutun;
                        vurus++;
                        if(karsitahta[satir][sutun]==vurus+" ") {
                            System.out.println("Gemi batırıldı.");
                            cevreIsaret(satir,satir,sutun,karsitahta,gemiYatay);
                            vurus=0;
                        }
                    }
                } else {
                    bilgisayarHamleAlgoritmasi(ilkVurulanSatir, ilkVurulanSutun, karsitahta);
                }

                    if (sayac == 14) {
                        System.out.println("Oyun Bitti ");
                        kazandiMi = true;
                        turn = 0;
                    }

            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        }
        return kazandiMi;
    }


    public  void bilgisayarHamleAlgoritmasi(int ilksatir, int ilksutun, String[][] karsitahta) {
       int yeniHamleYonu =1;
       int satir,sutun;
       try {
            switch (yeniHamleYonu) {
                case 1:sutun= ilksutun+1;
                    while (sutun<Play.tahtaBuyuklugu && !hamleTahta[satir][sutun].equals(". ")) {
                       if( karsitahta[ilksatir][sutun] != ". "&&karsitahta[ilksatir][sutun] != "0 ") {
                           hamleTahta[ilksatir][sutun]="X ";
                           gemiYatay=true;
                           bitis=sutun;
                           baslangic=ilksutun;
                           ++sutun;
                           ++sayac;
                           if(karsitahta[ilksatir][sutun]==vurus+" ") {
                               System.out.println("Gemi batırıldı.");
                               cevreIsaret(baslangic,bitis,ilksatir,karsitahta,gemiYatay);
                               vurus=0;
                               break;
                           }
                       }
                       else {
                           hamleTahta[ilksatir][sutun]=". ";
                           yeniHamleYonu++;
                           break;
                       }
                    }

                case 2:sutun=ilksutun-1;
                    while (0<=sutun && !hamleTahta[ilksatir][sutun].equals(". ")) {
                        if( karsitahta[ilksatir][sutun] != ". "&&karsitahta[ilksatir][sutun] != "0 ") {
                            hamleTahta[ilksatir][sutun]="X ";
                            gemiYatay=true;
                            baslangic=sutun;
                            bitis=ilksatir;
                            --sutun;
                            ++sayac;
                            if(karsitahta[ilksatir][sutun]==vurus+" ") {
                                System.out.println("Gemi batırıldı.");
                                cevreIsaret(baslangic,bitis,ilksatir,karsitahta,gemiYatay);
                                vurus=0;
                                break;
                            }
                        }
                        else {
                            hamleTahta[ilksatir][sutun]=". ";
                            yeniHamleYonu++;
                            break;
                        }
                    }
                case 3:satir=ilksatir+1;
                    while (satir<Play.tahtaBuyuklugu && !hamleTahta[satir][ilksutun].equals(". ")) {
                        if( karsitahta[ilksatir][sutun] != ". "&&karsitahta[ilksatir][sutun] != "0 ") {
                            hamleTahta[ilksatir][sutun]="X ";
                            gemiYatay=false;
                            bitis=ilksatir;
                            baslangic=satir;
                            ++satir;
                            ++sayac;
                            if(karsitahta[ilksatir][sutun]==vurus+" ") {
                                System.out.println("Gemi batırıldı.");
                                cevreIsaret(baslangic,bitis,ilksatir,karsitahta,gemiYatay);
                                vurus=0;
                                break;
                            }
                        }
                        else {
                            hamleTahta[ilksatir][sutun]=". ";
                            yeniHamleYonu++;
                            break;
                        }
                    }

                    bilgisayarHamleSonucu(satir, sutun, karsitahta, vurulanBirim, yeniHamleYonu);
                    break;
                case 4:
                    while (satir < Play.tahtaBuyuklugu && !karsitahta[satir][sutun].equals("0 ")) {
                        hamleTahta[satir][sutun] = "X ";
                        ++satir;
                        ++vurulanBirim;
                        ++sayac;
                    }

                    bilgisayarHamleSonucu(satir, sutun, karsitahta, vurulanBirim, yeniHamleYonu);
            }

            satir = Math.max(0, Math.min(satir, karsitahta.length - 1));
            sutun = Math.max(0, Math.min(sutun, karsitahta[0].length - 1));
        } catch (ArrayIndexOutOfBoundsException var7) {
            System.out.println("Tahta dışına çıkma hatası: " + var7.getMessage());
        }

    }

    public static void bilgisayarHamleSonucu(int hamleSatir, int hamleSutun, String[][] kullanici1Tahta, int vurulanBirim, int hamleYonu) {
        if (vurulanBirim == 1) {
            System.out.println("Bilgisayarın 2. atışı başarısızlıkla sonuçlandı.");
            gemiKalanKismiVur(hamleSatir, hamleSutun, kullanici1Tahta, hamleYonu, 1);
        } else if (vurulanBirim == 2) {
            switch (kullanici1Tahta[hamleSatir][hamleSutun]) {
                case "2 ":
                    System.out.println("Bilgisayar isabetli atış yaptı.MAYIN GEMİNİZ BATIRILDI!");
                    System.out.println("Hamle sırası tekrar bilgisayarın.");
                    atisKontrolBilgisayar(kullanici1Tahta);
                    break;
                case "3 ":
                    System.out.println("Bilgisayar KRUVAZÖR'ÜN 2 birimini vurdu!");
                    System.out.println("3. atış başarısızlıkla sonuçlandı.");
                    gemiKalanKismiVur(hamleSatir, hamleSutun, kullanici1Tahta, hamleYonu, 2);
                    break;
                case "4 ":
                    System.out.println("Bilgisayar AMİRAL'İN 2 birimini vurdu!");
                    System.out.println("3. atış başarısızlıkla sonuçlandı.");
                    gemiKalanKismiVur(hamleSatir, hamleSutun, kullanici1Tahta, hamleYonu, 2);
            }
        } else if (vurulanBirim == 3) {
            switch (kullanici1Tahta[hamleSatir][hamleSutun]) {
                case "3 ":
                    System.out.println("Bilgisayar 2 isabetli atış yaptı.KRUVAZÖR BATIRILDI!");
                    System.out.println("Hamle sırası tekrar bilgisayarın.");
                    atisKontrolBilgisayar(kullanici1Tahta);
                    break;
                case "4 ":
                    System.out.println("Bilgisayar AMİRAL'İN 3 birimini vurdu!");
                    System.out.println("4. atış başarısızlıkla sonuçlandı.");
                    gemiKalanKismiVur(hamleSatir, hamleSutun, kullanici1Tahta, hamleYonu, 3);
            }
        } else if (vurulanBirim == 4 && kullanici1Tahta[hamleSatir][hamleSutun].equals("4 ")) {
            System.out.println("Bilgisayar 3 isabetli atış yaptı.AMİRAL BATIRILDI!");
            System.out.println("Hamle sırası tekrar bilgisayarın.");
            atisKontrolBilgisayar(kullanici1Tahta);
        }

    }

    public static void gemiKalanKismiVur(int hamleSatir, int hamleSutun, String[][] karsiTahta, int hamleYonu, int vurulanBirim) {
        oyuncu.vur(bilgisayarTahta);
        --vurulanBirim;
        switch (hamleYonu) {
            case 1:
                bilgisayarHamleAlgoritmasi(hamleSatir, hamleSutun, karsiTahta, 3, vurulanBirim);
                break;
            case 2:
                bilgisayarHamleAlgoritmasi(hamleSatir, hamleSutun, karsiTahta, 4, vurulanBirim);
                break;
            case 3:
                bilgisayarHamleAlgoritmasi(hamleSatir, hamleSutun, karsiTahta, 1, vurulanBirim);
                break;
            case 4:
                bilgisayarHamleAlgoritmasi(hamleSatir, hamleSutun, karsiTahta, 2, vurulanBirim);
        }

    }

    public static void cevreIsaret(int bas, int bit, int sbt, String[][] karsiTahta, boolean gemiYatay) {
        int cevre;
        if (gemiYatay) {
            for (cevre = bas; cevre <= bit; ++cevre) {
                if (sbt + 1 < tahtaBuyuklugu - 1 && karsiTahta[sbt + 1][cevre].equals(". ")) {
                    hamleTahta[sbt + 1][cevre] = ". ";
                }

                if (sbt > 0 && karsiTahta[sbt - 1][cevre].equals(". ")) {
                    hamleTahta[sbt - 1][cevre] = ". ";
                }

                if (cevre + 1 < tahtaBuyuklugu - 1 && karsiTahta[sbt][cevre + 1].equals(". ")) {
                    hamleTahta[sbt][cevre + 1] = ". ";
                }

                if (cevre > 0 && karsiTahta[sbt][cevre - 1].equals(". ")) {
                    hamleTahta[sbt][cevre - 1] = ". ";
                }
            }
        } else {
            for (cevre = bas; cevre <= bit; ++cevre) {
                if (cevre + 1 < tahtaBuyuklugu - 1 && karsiTahta[cevre + 1][sbt] == ". ") {
                    hamleTahta[cevre + 1][sbt] = ". ";
                }

                if (cevre > 0 && karsiTahta[cevre - 1][sbt] == ". ") {
                    hamleTahta[cevre - 1][sbt] = ". ";
                }

                if (sbt + 1 < tahtaBuyuklugu - 1 && karsiTahta[cevre][sbt + 1] == ". ") {
                    hamleTahta[cevre][sbt + 1] = ". ";
                }

                if (sbt > 0 && karsiTahta[cevre][sbt - 1].equals(". ")) {
                    hamleTahta[cevre][sbt - 1] = ". ";
                }
            }
        }

    }

}
